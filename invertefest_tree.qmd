---
title: "Making a phylogenetic tree using #Invertefest observations"
author: Maxime Dahirel
date: today
date-format: iso
format: 
  html: 
    embed-resources: true
    toc: true
    code-fold: true
    code-summary: "Show the code"
theme: yeti
execute:
  message: false
  output: false
editor_options: 
  chunk_output_type: console
---

> #InverteFest is a periodic online event where we invite you to celebrate the overlooked invertebrate fauna around you and share the joys of discovery online. <br/>The hashtag was conceived when [Franz Anthony](https://franzanth.com/) and [Maureen Berg](https://maureenbug.github.io/) went looking for bugs and slugs in Bali. [Kelly Brenner](https://www.metrofieldguide.com/), stuck in Seattle, wondered if we could invite our online friends to look for bugs and slugs together in spirit, even though we’re physically far apart. Besides, what may be an everyday creature to you is often exciting to someone who lives half the world away!

(from the [\#Invertefest August 2023 page on iNaturalist](https://www.inaturalist.org/projects/invertefest-august-2023))

During this summer's (2023) \#Invertefest, I randomly decided it would be neat to try and make a phylogenetic tree from all the iNat observations.

```{r load_packages}
library(tidyverse) # CRAN v2.0.0
library(httr)      # CRAN v1.4.7
library(ape)       # CRAN v5.7-1
library(rotl)      # CRAN v3.1.0
library(ggtree)    # Bioconductor v3.8.2
library(ggtext)    # CRAN v0.1.2
library(rphylopic) # CRAN v1.1.1 
library(here)      # CRAN v1.0.1
```

# Loading iNat observations

There are in theory three options to get the list of observed taxa.

(i) we can rely on data predownloaded manually through the [website](https://www.inaturalist.org/observations/export?projects=invertefest-august-2023):

```{r load_data}
#invertefest_summer23 <- read_csv(here("raw_data","observations-354487.csv"))
```

(ii) we could use the `rinat` package instead, but it has some known issues; here it says the project has 1000s of obs when it only has a few 100s.

(iii) we can also directly query the API via `httr::GET()`:

```{r get_data_api}
# first let's make a general request to see how many obs there is
request <- GET("https://api.inaturalist.org/v1/observations?project_id=invertefest-august-2023")
request_parsed <- content(request)
N_obs <- request_parsed$total_results

Npages <- ceiling(N_obs / 200) # with a max per page set at 200, this gives the number of page requests we're gonna need

prefix_url <- "https://api.inaturalist.org/v1/observations?project_id=invertefest-august-2023&page="
suffix_url <- "&per_page=200&order=desc&order_by=created_at"

invertefest_summer23 <- tibble(page = 1:Npages) |>
  mutate(url = paste0(prefix_url, page, suffix_url)) |>
  mutate(response = map(.x = url, .f = ~ .x |> GET())) |>
  mutate(parsed = map(.x = response, .f = ~ .x |>
    content() |>
    pluck("results"))) |> # we get the list containing the results for each page
  unnest(parsed) |>
  mutate(scientific_name = map(.x = parsed, .f = ~ .x |> pluck("taxon", "name"))) |> # we extract the taxon name
  unnest(scientific_name)

```


# Generating tree data

Now that we have our data, we are going to use the `rotl` package to:  
- standardize taxon names, filter names with mismatches to the Open Tree Of Life, imperfect character matches or other flags  
- get the subtree of the Open Tree of Life from these taxon names  

```{r get_ott_ids}
taxa <- unique(invertefest_summer23$scientific_name)

resolved_names <- tnrs_match_names(taxa, context_name = "Animals")

filtered_names <- resolved_names |>
  filter(!is.na(ott_id) &
    flags %in% c("", "sibling_higher", "infraspecific") &
    score > 0.9)
# easier to keep valid flags than trying to check for every new invalid flag that appears with update
```
(not all obs are successfully matched to a taxon name on the ‘synthetic tree’ from Open Tree of Life, so we lose a few in the process)

```{r get_subtree}
tol_induced_subtree(
  ott_ids = unique(filtered_names$ott_id),
  label_format = "name", file = here("tree_data", "tree.newick")
)

my_tree <- ape::read.tree(here("tree_data", "tree.newick"))
```

We save the tree in Newick format to `file`, and then reimport it immediately. We actually don't need to do that in most cases, we could directly get the tree as a `phylo` object, by letting the `file` argument empty. But doing that tends to collapse a lot of internal nodes (which contains the clade names), and we're going to use some of those to annotate the tree.

# Plotting the tree

We use the [`ggtree`](https://github.com/YuLab-SMU/ggtree) package to plot and annotate the tree. We can use many types of annotations. We're going to combine colour highlighting of major clades with [PhyloPic](https://www.phylopic.org/) images of some iconic groups, courtesy of the [`rphylopic`](https://rphylopic.palaeoverse.org/) package. We also make sure that the silhouettes are properly credited on the plot.

```{r annotations}
d1 <- data.frame(
  node = c(
    length(my_tree$tip.label) + which(my_tree$node.label == "Insecta"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Myriapoda"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Araneae"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Mollusca")
  ),
  taxon = c("Insects", "Myriapods", "Spiders", "Molluscs")
)


d2 <- data.frame(
  node = c(
    length(my_tree$tip.label) + which(my_tree$node.label == "Diptera"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Hymenoptera"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Coleoptera"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Lepidoptera"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Orthoptera"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Araneae"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Gastropoda"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Odonata"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Hemiptera"),
    length(my_tree$tip.label) + which(my_tree$node.label == "Myriapoda")
  ),
  taxon = c(
    "Diptera", "Hymenoptera", "Coleoptera", "Lepidoptera",
    "Orthoptera", "Araneae", "Gastropoda", "Odonata", "Hemiptera", "Myriapoda"
  ),
  image = c(
    get_uuid(name = "Drosophila americana", n = 1),
    get_uuid(name = "Vespula", n = 1),
    get_uuid(name = "Carabus", n = 1),
    get_uuid(name = "Papilio", n = 1),
    get_uuid(name = "Acrididae", n = 1),
    get_uuid(name = "Araneus", n = 1),
    get_uuid(name = "Helix aspersa", n = 1),
    get_uuid(name = "Sympetrum", n = 1),
    get_uuid(name = "Lycorma delicatula", n = 1),
    get_uuid(name = "Lithobius forficatus", n = 1)
  )
) |> 
  mutate(contributor = map(.x=image,.f=~.x |> get_attribution() |> pluck("contributor")),
         license = map(.x=image,.f=~.x |> get_attribution() |> pluck("license"))
  ) |> 
  mutate(lic=str_remove(license,"https://creativecommons.org/")) |> 
  mutate(lic=case_when(str_detect(lic,"publicdomain")~"*",T~lic)) |> 
  mutate(lic=str_remove(lic,"licenses/"))|> 
  mutate(lic=str_replace_all(lic,"/$","")) |> 
  mutate(lic=str_replace_all(lic,"/"," ") |> 
           str_to_upper()) |> 
  mutate(lic=case_when(lic!="*"~paste("CC", lic),TRUE~"public domain")) |> 
  mutate(attr = paste0(taxon,": ", contributor, ", ", lic)) |> 
  arrange(taxon)

phylopic_credit <- paste0("Animal silhouettes are from **phylopic.org**. ",paste(d2$attr,collapse="; "),".")

figure_author <- "Data visualisation by **Maxime Dahirel**, underlying code: **github.com/mdahirel/invertefest_tree**"

full_credit <- paste0(figure_author,"<br/><br/>",
                      str_wrap(phylopic_credit,100)|> str_replace_all("\n","<br/>")
)

#(tips are counted as nodes for `ggtree` purposes, that's why we add the number of tips to get the correct node values)
```


```{r tree}
#| output: true
#| fig-width: 8
#| fig-height: 10
ggtree(my_tree, layout = "fan") +
  geom_highlight(data = d1, aes(node = node, fill = taxon), alpha = 1) +
  geom_tree() +
  geom_cladelab(
    data = d2,
    mapping = aes(node = node, label = taxon, image = image), imagesize = 0.1,
    geom = "phylopic", imagecolor = "black", offset = 1, offset.text = 10, alpha = 1
  ) +
  scale_fill_brewer(name= "Taxon",type = "qual") + 
  labs(
    title="**How diversified are #InverteFest observations?**",
    subtitle="A phylogenetic tree based on iNaturalist data from August 2023",
    caption = full_credit
  )+
    theme(plot.title=element_markdown(),
          plot.caption = element_markdown(size=8))
```


